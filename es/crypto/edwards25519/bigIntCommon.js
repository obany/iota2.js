"use strict";
/* eslint-disable no-bitwise */
/**
 * This is a port of the Go code from https://github.com/hdevalence/ed25519consensus
 * which is an extension of https://github.com/golang/crypto/tree/master/ed25519
 * which in a port of the “ref10” implementation of ed25519 from SUPERCOP
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.bigIntLoad8 = exports.bigIntLoad4 = exports.bigIntLoad3 = exports.BIG_8388607 = exports.BIG_2097151 = exports.BIG_683901 = exports.BIG_136657 = exports.BIG_997805 = exports.BIG_654183 = exports.BIG_470296 = exports.BIG_666643 = exports.BIG_38 = exports.BIG_32 = exports.BIG_ARR = exports.BIG_1_SHIFTL_25 = exports.BIG_1_SHIFTL_24 = exports.BIG_1_SHIFTL_20 = void 0;
// @internal
exports.BIG_1_SHIFTL_20 = BigInt(1) << BigInt(20);
// @internal
exports.BIG_1_SHIFTL_24 = BigInt(1) << BigInt(24);
// @internal
exports.BIG_1_SHIFTL_25 = BigInt(1) << BigInt(25);
// @internal
exports.BIG_ARR = [
    BigInt(0), BigInt(1), BigInt(2), BigInt(3), BigInt(4), BigInt(5),
    BigInt(6), BigInt(7), BigInt(8), BigInt(9), BigInt(10), BigInt(11),
    BigInt(12), BigInt(13), BigInt(14), BigInt(15), BigInt(16), BigInt(17),
    BigInt(18), BigInt(19), BigInt(20), BigInt(21), BigInt(22), BigInt(23),
    BigInt(24), BigInt(25), BigInt(26)
];
// @internal
exports.BIG_32 = BigInt(32);
// @internal
exports.BIG_38 = BigInt(38);
// @internal
exports.BIG_666643 = BigInt(666643);
// @internal
exports.BIG_470296 = BigInt(470296);
// @internal
exports.BIG_654183 = BigInt(654183);
// @internal
exports.BIG_997805 = BigInt(997805);
// @internal
exports.BIG_136657 = BigInt(136657);
// @internal
exports.BIG_683901 = BigInt(683901);
// @internal
exports.BIG_2097151 = BigInt(2097151);
// @internal
exports.BIG_8388607 = BigInt(8388607);
/**
 * Load 3 bytes from array as bigint.
 * @param data The input array.
 * @param byteOffset The start index to read from.
 * @returns The bigint.
 * @internal
 */
function bigIntLoad3(data, byteOffset) {
    var v0 = (data[byteOffset + 0] +
        (data[byteOffset + 1] << 8) +
        (data[byteOffset + 2] << 16)) >>> 0;
    return BigInt(v0);
}
exports.bigIntLoad3 = bigIntLoad3;
/**
 * Load 4 bytes from array as bigint.
 * @param data The input array.
 * @param byteOffset The start index to read from.
 * @returns The bigint.
 * @internal
 */
function bigIntLoad4(data, byteOffset) {
    var v0 = (data[byteOffset + 0] +
        (data[byteOffset + 1] << 8) +
        (data[byteOffset + 2] << 16) +
        (data[byteOffset + 3] << 24)) >>> 0;
    return BigInt(v0);
}
exports.bigIntLoad4 = bigIntLoad4;
/**
 * Load 8 bytes from array as bigint.
 * @param data The data to read from.
 * @param byteOffset The start index to read from.
 * @returns The bigint.
 * @internal
 */
function bigIntLoad8(data, byteOffset) {
    var v0 = (data[byteOffset + 0] +
        (data[byteOffset + 1] << 8) +
        (data[byteOffset + 2] << 16) +
        (data[byteOffset + 3] << 24)) >>> 0;
    var v1 = (data[byteOffset + 4] +
        (data[byteOffset + 5] << 8) +
        (data[byteOffset + 6] << 16) +
        (data[byteOffset + 7] << 24)) >>> 0;
    return (BigInt(v1) << exports.BIG_32) | BigInt(v0);
}
exports.bigIntLoad8 = bigIntLoad8;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYmlnSW50Q29tbW9uLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL2NyeXB0by9lZHdhcmRzMjU1MTkvYmlnSW50Q29tbW9uLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSwrQkFBK0I7QUFDL0I7Ozs7R0FJRzs7O0FBRUgsWUFBWTtBQUNDLFFBQUEsZUFBZSxHQUFXLE1BQU0sQ0FBQyxDQUFDLENBQUMsSUFBSSxNQUFNLENBQUMsRUFBRSxDQUFDLENBQUM7QUFDL0QsWUFBWTtBQUNDLFFBQUEsZUFBZSxHQUFXLE1BQU0sQ0FBQyxDQUFDLENBQUMsSUFBSSxNQUFNLENBQUMsRUFBRSxDQUFDLENBQUM7QUFDL0QsWUFBWTtBQUNDLFFBQUEsZUFBZSxHQUFXLE1BQU0sQ0FBQyxDQUFDLENBQUMsSUFBSSxNQUFNLENBQUMsRUFBRSxDQUFDLENBQUM7QUFFL0QsWUFBWTtBQUNDLFFBQUEsT0FBTyxHQUFhO0lBQzdCLE1BQU0sQ0FBQyxDQUFDLENBQUMsRUFBRSxNQUFNLENBQUMsQ0FBQyxDQUFDLEVBQUUsTUFBTSxDQUFDLENBQUMsQ0FBQyxFQUFFLE1BQU0sQ0FBQyxDQUFDLENBQUMsRUFBRSxNQUFNLENBQUMsQ0FBQyxDQUFDLEVBQUUsTUFBTSxDQUFDLENBQUMsQ0FBQztJQUNoRSxNQUFNLENBQUMsQ0FBQyxDQUFDLEVBQUUsTUFBTSxDQUFDLENBQUMsQ0FBQyxFQUFFLE1BQU0sQ0FBQyxDQUFDLENBQUMsRUFBRSxNQUFNLENBQUMsQ0FBQyxDQUFDLEVBQUUsTUFBTSxDQUFDLEVBQUUsQ0FBQyxFQUFFLE1BQU0sQ0FBQyxFQUFFLENBQUM7SUFDbEUsTUFBTSxDQUFDLEVBQUUsQ0FBQyxFQUFFLE1BQU0sQ0FBQyxFQUFFLENBQUMsRUFBRSxNQUFNLENBQUMsRUFBRSxDQUFDLEVBQUUsTUFBTSxDQUFDLEVBQUUsQ0FBQyxFQUFFLE1BQU0sQ0FBQyxFQUFFLENBQUMsRUFBRSxNQUFNLENBQUMsRUFBRSxDQUFDO0lBQ3RF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